

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Jun 14 16:11:23 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F2550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  0002C4                     __pidataCOMRAM:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _per
    63  0002C4  0014               	dw	20
    64                           
    65                           ;initializer for _duty
    66  0002C6  0001               	dw	1
    67                           
    68                           	psect	nvCOMRAM
    69  000030                     __pnvCOMRAM:
    70                           	opt stack 0
    71  000030                     _t_off:
    72                           	opt stack 0
    73  000030                     	ds	2
    74  000032                     _t_on:
    75                           	opt stack 0
    76  000032                     	ds	2
    77  0000                     _TRISAbits	set	3986
    78  0000                     _LATA	set	3977
    79  0000                     _PORTA	set	3968
    80  0000                     _PORTAbits	set	3968
    81  0000                     _LATAbits	set	3977
    82  0000                     _ADCON1	set	4033
    83                           
    84                           ; #config settings
    85  0000                     
    86                           	psect	cinit
    87  00024C                     __pcinit:
    88                           	opt stack 0
    89  00024C                     start_initialization:
    90                           	opt stack 0
    91  00024C                     __initialization:
    92                           	opt stack 0
    93                           
    94                           ; Initialize objects allocated to COMRAM (4 bytes)
    95                           ; load TBLPTR registers with __pidataCOMRAM
    96  00024C  0EC4               	movlw	low __pidataCOMRAM
    97  00024E  6EF6               	movwf	tblptrl,c
    98  000250  0E02               	movlw	high __pidataCOMRAM
    99  000252  6EF7               	movwf	tblptrh,c
   100  000254  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   101  000256  6EF8               	movwf	tblptru,c
   102  000258  EE00  F034         	lfsr	0,__pdataCOMRAM
   103  00025C  EE10 F004          	lfsr	1,4
   104  000260                     copy_data0:
   105  000260  0009               	tblrd		*+
   106  000262  CFF5 FFEE          	movff	tablat,postinc0
   107  000266  50E5               	movf	postdec1,w,c
   108  000268  50E1               	movf	fsr1l,w,c
   109  00026A  E1FA               	bnz	copy_data0
   110                           
   111                           ; Clear objects allocated to COMRAM (6 bytes)
   112  00026C  6A2F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   113  00026E  6A2E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   114  000270  6A2D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   115  000272  6A2C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   116  000274  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   117  000276  6A2A               	clrf	__pbssCOMRAM& (0+255),c
   118  000278                     end_of_initialization:
   119                           	opt stack 0
   120  000278                     __end_of__initialization:
   121                           	opt stack 0
   122  000278  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  00027A  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  00027C  0100               	movlb	0
   125  00027E  EF65  F000         	goto	_main	;jump to C main() function
   126                           tblptru	equ	0xFF8
   127                           tblptrh	equ	0xFF7
   128                           tblptrl	equ	0xFF6
   129                           tablat	equ	0xFF5
   130                           postinc0	equ	0xFEE
   131                           postdec1	equ	0xFE5
   132                           fsr1l	equ	0xFE1
   133                           
   134                           	psect	bssCOMRAM
   135  00002A                     __pbssCOMRAM:
   136                           	opt stack 0
   137  00002A                     _count_duty:
   138                           	opt stack 0
   139  00002A                     	ds	2
   140  00002C                     _count_up:
   141                           	opt stack 0
   142  00002C                     	ds	2
   143  00002E                     _dec_duty:
   144                           	opt stack 0
   145  00002E                     	ds	1
   146  00002F                     _inc_duty:
   147                           	opt stack 0
   148  00002F                     	ds	1
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	dataCOMRAM
   158  000034                     __pdataCOMRAM:
   159                           	opt stack 0
   160  000034                     _per:
   161                           	opt stack 0
   162  000034                     	ds	2
   163  000036                     _duty:
   164                           	opt stack 0
   165  000036                     	ds	2
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           tblptrl	equ	0xFF6
   169                           tablat	equ	0xFF5
   170                           postinc0	equ	0xFEE
   171                           postdec1	equ	0xFE5
   172                           fsr1l	equ	0xFE1
   173                           
   174                           	psect	cstackBANK0
   175  000060                     __pcstackBANK0:
   176                           	opt stack 0
   177  000060                     ??_delay_ms:
   178                           
   179                           ; 1 bytes @ 0x0
   180  000060                     	ds	1
   181  000061                     delay_ms@i:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x1
   185  000061                     	ds	2
   186  000063                     ??_main:
   187                           
   188                           ; 1 bytes @ 0x3
   189  000063                     	ds	2
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	opt stack 0
   201  000001                     ??_high_isr:
   202  000001                     
   203                           ; 1 bytes @ 0x0
   204  000001                     	ds	18
   205  000013                     ??_low_isr:
   206                           
   207                           ; 1 bytes @ 0x12
   208  000013                     	ds	21
   209  000028                     delay_ms@ms:
   210                           	opt stack 0
   211                           
   212                           ; 2 bytes @ 0x27
   213  000028                     	ds	2
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 42 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   241 ;;      Params:         0       0       0       0       0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0       0       0       0       0
   243 ;;      Temps:          0       2       0       0       0       0       0       0       0
   244 ;;      Totals:         0       2       0       0       0       0       0       0       0
   245 ;;Total ram usage:        2 bytes
   246 ;; Hardware stack levels required when called:    3
   247 ;; This function calls:
   248 ;;		_ConfigureOscillator
   249 ;;		_InitApp
   250 ;;		_delay_ms
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text0
   257  0000CA                     __ptext0:
   258                           	opt stack 0
   259  0000CA                     _main:
   260                           	opt stack 28
   261                           
   262                           ;main.c: 45: ConfigureOscillator();
   263                           
   264                           ;incstack = 0
   265  0000CA  EC64  F001         	call	_ConfigureOscillator	;wreg free
   266                           
   267                           ;main.c: 48: InitApp();
   268  0000CE  EC59  F001         	call	_InitApp	;wreg free
   269  0000D2                     
   270                           ;main.c: 51: t_on=duty;
   271  0000D2  C036  F032         	movff	_duty,_t_on
   272  0000D6  C037  F033         	movff	_duty+1,_t_on+1
   273                           
   274                           ;main.c: 52: t_off=per-duty;
   275  0000DA  C036  F063         	movff	_duty,??_main
   276  0000DE  C037  F064         	movff	_duty+1,??_main+1
   277  0000E2  0100               	movlb	0	; () banked
   278  0000E4  1F63               	comf	??_main& (0+255),f,b
   279  0000E6  1F64               	comf	(??_main+1)& (0+255),f,b
   280  0000E8  4B63               	infsnz	??_main& (0+255),f,b
   281  0000EA  2B64               	incf	(??_main+1)& (0+255),f,b
   282  0000EC  5034               	movf	_per,w,c
   283  0000EE  2563               	addwf	??_main& (0+255),w,b
   284  0000F0  6E30               	movwf	_t_off,c
   285  0000F2  5035               	movf	_per+1,w,c
   286  0000F4  2164               	addwfc	(??_main+1)& (0+255),w,b
   287  0000F6  6E31               	movwf	_t_off+1,c
   288  0000F8                     
   289                           ;main.c: 54: {
   290                           ;main.c: 56: LATAbits.LA0=1;
   291                           
   292                           ; BSR set to: 0
   293  0000F8  8089               	bsf	3977,0,c	;volatile
   294                           
   295                           ;main.c: 57: delay_ms(t_on);
   296  0000FA  C032  F028         	movff	_t_on,delay_ms@ms
   297  0000FE  C033  F029         	movff	_t_on+1,delay_ms@ms+1
   298  000102  EC41  F001         	call	_delay_ms	;wreg free
   299                           
   300                           ;main.c: 58: LATAbits.LA0=0;
   301  000106  9089               	bcf	3977,0,c	;volatile
   302                           
   303                           ;main.c: 59: delay_ms(t_off);
   304  000108  C030  F028         	movff	_t_off,delay_ms@ms
   305  00010C  C031  F029         	movff	_t_off+1,delay_ms@ms+1
   306  000110  EC41  F001         	call	_delay_ms	;wreg free
   307                           
   308                           ;main.c: 60: if(PORTAbits.RA1==1){
   309  000114  A280               	btfss	3968,1,c	;volatile
   310  000116  D003               	goto	l44
   311                           
   312                           ;main.c: 61: count_up+=1;
   313  000118  4A2C               	infsnz	_count_up,f,c
   314  00011A  2A2D               	incf	_count_up+1,f,c
   315                           
   316                           ;main.c: 63: }
   317  00011C  D01D               	goto	l46
   318  00011E                     l44:
   319                           
   320                           ;main.c: 64: else if (count_up!=0) {
   321  00011E  502C               	movf	_count_up,w,c
   322  000120  102D               	iorwf	_count_up+1,w,c
   323  000122  B4D8               	btfsc	status,2,c
   324  000124  D019               	goto	l46
   325                           
   326                           ;main.c: 65: if(inc_duty || dec_duty){
   327  000126  502F               	movf	_inc_duty,w,c
   328  000128  A4D8               	btfss	status,2,c
   329  00012A  D003               	goto	u290
   330  00012C  502E               	movf	_dec_duty,w,c
   331  00012E  B4D8               	btfsc	status,2,c
   332  000130  D004               	goto	l47
   333  000132                     u290:
   334                           
   335                           ;main.c: 66: inc_duty=0;
   336  000132  0E00               	movlw	0
   337  000134  6E2F               	movwf	_inc_duty,c
   338                           
   339                           ;main.c: 67: dec_duty=0;
   340  000136  0E00               	movlw	0
   341  000138  D007               	goto	L1
   342  00013A                     l47:
   343                           
   344                           ;main.c: 69: else if(count_up>100) {
   345  00013A  502D               	movf	_count_up+1,w,c
   346  00013C  E104               	bnz	u300
   347  00013E  0E65               	movlw	101
   348  000140  5C2C               	subwf	_count_up,w,c
   349  000142  A0D8               	btfss	status,0,c
   350  000144  D003               	goto	l51
   351  000146                     u300:
   352                           
   353                           ;main.c: 70: dec_duty=1;
   354  000146  0E01               	movlw	1
   355  000148                     L1:
   356  000148  6E2E               	movwf	_dec_duty,c
   357                           
   358                           ;main.c: 71: }
   359  00014A  D002               	goto	l52
   360  00014C                     l51:
   361                           
   362                           ;main.c: 72: else {
   363                           ;main.c: 73: inc_duty=1;
   364  00014C  0E01               	movlw	1
   365  00014E  6E2F               	movwf	_inc_duty,c
   366  000150                     l52:
   367                           
   368                           ;main.c: 74: }
   369                           ;main.c: 75: count_up=0;
   370  000150  0E00               	movlw	0
   371  000152  6E2D               	movwf	_count_up+1,c
   372  000154  0E00               	movlw	0
   373  000156  6E2C               	movwf	_count_up,c
   374  000158                     l46:
   375                           
   376                           ;main.c: 76: }
   377                           ;main.c: 77: if(inc_duty){
   378  000158  502F               	movf	_inc_duty,w,c
   379  00015A  B4D8               	btfsc	status,2,c
   380  00015C  D013               	goto	l53
   381                           
   382                           ;main.c: 78: count_duty+=1;
   383  00015E  4A2A               	infsnz	_count_duty,f,c
   384  000160  2A2B               	incf	_count_duty+1,f,c
   385                           
   386                           ;main.c: 80: if(count_duty==25){
   387  000162  0E19               	movlw	25
   388  000164  182A               	xorwf	_count_duty,w,c
   389  000166  102B               	iorwf	_count_duty+1,w,c
   390  000168  A4D8               	btfss	status,2,c
   391  00016A  D7C6               	goto	l43
   392                           
   393                           ;main.c: 81: if(duty<20){
   394  00016C  5037               	movf	_duty+1,w,c
   395  00016E  E107               	bnz	l900
   396  000170  0E14               	movlw	20
   397  000172  5C36               	subwf	_duty,w,c
   398  000174  B0D8               	btfsc	status,0,c
   399  000176  D003               	goto	l55
   400                           
   401                           ;main.c: 82: duty+=1;
   402  000178  4A36               	infsnz	_duty,f,c
   403  00017A  2A37               	incf	_duty+1,f,c
   404                           
   405                           ;main.c: 83: }
   406  00017C  D017               	goto	l61
   407  00017E                     l55:
   408  00017E                     l900:
   409                           
   410                           ;main.c: 84: else{
   411                           ;main.c: 85: inc_duty=0;
   412  00017E  0E00               	movlw	0
   413  000180  6E2F               	movwf	_inc_duty,c
   414  000182  D014               	goto	l61
   415  000184                     l53:
   416                           
   417                           ;main.c: 94: else if(dec_duty){
   418                           
   419                           ; BSR set to: 0
   420  000184  502E               	movf	_dec_duty,w,c
   421  000186  B4D8               	btfsc	status,2,c
   422  000188  D7B7               	goto	l43
   423                           
   424                           ;main.c: 95: count_duty+=1;
   425  00018A  4A2A               	infsnz	_count_duty,f,c
   426  00018C  2A2B               	incf	_count_duty+1,f,c
   427                           
   428                           ;main.c: 96: if(count_duty==25){
   429  00018E  0E19               	movlw	25
   430  000190  182A               	xorwf	_count_duty,w,c
   431  000192  102B               	iorwf	_count_duty+1,w,c
   432  000194  A4D8               	btfss	status,2,c
   433  000196  D7B0               	goto	l43
   434                           
   435                           ;main.c: 97: if(duty>0){
   436  000198  5036               	movf	_duty,w,c
   437  00019A  1037               	iorwf	_duty+1,w,c
   438  00019C  B4D8               	btfsc	status,2,c
   439  00019E  D004               	goto	l60
   440                           
   441                           ;main.c: 98: duty-=1;
   442  0001A0  0636               	decf	_duty,f,c
   443  0001A2  A0D8               	btfss	status,0,c
   444  0001A4  0637               	decf	_duty+1,f,c
   445                           
   446                           ;main.c: 99: }
   447  0001A6  D002               	goto	l61
   448  0001A8                     l60:
   449                           
   450                           ;main.c: 100: else{
   451                           ;main.c: 101: dec_duty=0;
   452  0001A8  0E00               	movlw	0
   453  0001AA  6E2E               	movwf	_dec_duty,c
   454  0001AC                     l61:
   455                           
   456                           ;main.c: 102: }
   457                           ;main.c: 103: count_duty=0;
   458  0001AC  0E00               	movlw	0
   459  0001AE  6E2B               	movwf	_count_duty+1,c
   460  0001B0  0E00               	movlw	0
   461  0001B2  6E2A               	movwf	_count_duty,c
   462  0001B4  D78E               	goto	L3
   463  0001B6                     __end_of_main:
   464                           	opt stack 0
   465                           tblptru	equ	0xFF8
   466                           tblptrh	equ	0xFF7
   467                           tblptrl	equ	0xFF6
   468                           tablat	equ	0xFF5
   469                           postinc0	equ	0xFEE
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           status	equ	0xFD8
   473                           
   474 ;; *************** function _delay_ms *****************
   475 ;; Defined at:
   476 ;;		line 111 in file "main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;  ms              2   39[COMRAM] unsigned int 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  i               2    1[BANK0 ] unsigned int 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  1    wreg      void 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   490 ;;      Params:         2       0       0       0       0       0       0       0       0
   491 ;;      Locals:         0       2       0       0       0       0       0       0       0
   492 ;;      Temps:          0       1       0       0       0       0       0       0       0
   493 ;;      Totals:         2       3       0       0       0       0       0       0       0
   494 ;;Total ram usage:        5 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; Hardware stack levels required when called:    2
   497 ;; This function calls:
   498 ;;		Nothing
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  000282                     __ptext1:
   506                           	opt stack 0
   507  000282                     _delay_ms:
   508                           	opt stack 28
   509                           
   510                           ;main.c: 112: unsigned int i;
   511                           ;main.c: 113: for(i=0;i<ms;i++){
   512                           
   513                           ; BSR set to: 0
   514                           ;incstack = 0
   515  000282  0E00               	movlw	0
   516  000284  0100               	movlb	0	; () banked
   517  000286  6F62               	movwf	(delay_ms@i+1)& (0+255),b
   518  000288  0E00               	movlw	0
   519  00028A  6F61               	movwf	delay_ms@i& (0+255),b
   520  00028C  D00B               	goto	l67
   521  00028E                     
   522                           ; BSR set to: 0
   523                           ;main.c: 114: _delay((unsigned long)((1)*(20000000/4000.0)));
   524                           
   525                           ; BSR set to: 0
   526  00028E  0E07               	movlw	7
   527  000290  0100               	movlb	0	; () banked
   528  000292  6F60               	movwf	??_delay_ms& (0+255),b
   529  000294  0E7D               	movlw	125
   530  000296                     u377:
   531  000296  2EE8               	decfsz	wreg,f,c
   532  000298  D7FE               	bra	u377
   533  00029A  2F60               	decfsz	??_delay_ms& (0+255),f,b
   534  00029C  D7FC               	bra	u377
   535  00029E  0100               	movlb	0	; () banked
   536  0002A0  4B61               	infsnz	delay_ms@i& (0+255),f,b
   537  0002A2  2B62               	incf	(delay_ms@i+1)& (0+255),f,b
   538  0002A4                     l67:
   539                           
   540                           ; BSR set to: 0
   541  0002A4  5028               	movf	delay_ms@ms,w,c
   542  0002A6  5D61               	subwf	delay_ms@i& (0+255),w,b
   543  0002A8  5029               	movf	delay_ms@ms+1,w,c
   544  0002AA  5962               	subwfb	(delay_ms@i+1)& (0+255),w,b
   545  0002AC  B0D8               	btfsc	status,0,c
   546  0002AE  0012               	return	
   547  0002B0  D7EE               	goto	l68
   548  0002B2                     __end_of_delay_ms:
   549                           	opt stack 0
   550                           tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           tblptrl	equ	0xFF6
   553                           tablat	equ	0xFF5
   554                           postinc0	equ	0xFEE
   555                           wreg	equ	0xFE8
   556                           postdec1	equ	0xFE5
   557                           fsr1l	equ	0xFE1
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _InitApp *****************
   561 ;; Defined at:
   562 ;;		line 28 in file "user.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   576 ;;      Params:         0       0       0       0       0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    2
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text2
   591  0002B2                     __ptext2:
   592                           	opt stack 0
   593  0002B2                     _InitApp:
   594                           	opt stack 28
   595                           
   596                           ;user.c: 31: PORTA=0;
   597                           
   598                           ; BSR set to: 0
   599                           ;incstack = 0
   600  0002B2  0E00               	movlw	0
   601  0002B4  6E80               	movwf	3968,c	;volatile
   602                           
   603                           ;user.c: 33: LATA=0;
   604  0002B6  0E00               	movlw	0
   605  0002B8  6E89               	movwf	3977,c	;volatile
   606                           
   607                           ;user.c: 35: ADCON1=0x0F;
   608  0002BA  0E0F               	movlw	15
   609  0002BC  6EC1               	movwf	4033,c	;volatile
   610                           
   611                           ;user.c: 38: TRISAbits.RA0=0;
   612  0002BE  9092               	bcf	3986,0,c	;volatile
   613                           
   614                           ;user.c: 39: TRISAbits.RA1=1;
   615  0002C0  8292               	bsf	3986,1,c	;volatile
   616  0002C2  0012               	return		;funcret
   617  0002C4                     __end_of_InitApp:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           tblptrh	equ	0xFF7
   621                           tblptrl	equ	0xFF6
   622                           tablat	equ	0xFF5
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           status	equ	0xFD8
   628                           
   629 ;; *************** function _ConfigureOscillator *****************
   630 ;; Defined at:
   631 ;;		line 24 in file "system.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		None
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         0       0       0       0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text3
   660  0002C8                     __ptext3:
   661                           	opt stack 0
   662  0002C8                     _ConfigureOscillator:
   663                           	opt stack 28
   664                           
   665                           ;incstack = 0
   666  0002C8  0012               	return		;funcret
   667  0002CA                     __end_of_ConfigureOscillator:
   668                           	opt stack 0
   669                           tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           status	equ	0xFD8
   678                           
   679 ;; *************** function _low_isr *****************
   680 ;; Defined at:
   681 ;;		line 67 in file "interrupts.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		None
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         0       0       0       0       0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0       0       0
   697 ;;      Temps:         21       0       0       0       0       0       0       0       0
   698 ;;      Totals:        21       0       0       0       0       0       0       0       0
   699 ;;Total ram usage:       21 bytes
   700 ;; Hardware stack levels used:    1
   701 ;; Hardware stack levels required when called:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		Interrupt level 1
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	intcodelo
   710  000018                     __pintcodelo:
   711                           	opt stack 0
   712  000018                     _low_isr:
   713                           	opt stack 28
   714                           
   715                           ;incstack = 0
   716  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   717  00001A  CFD8 F013          	movff	status,??_low_isr
   718  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
   719  000022  CFE0 F015          	movff	bsr,??_low_isr+2
   720  000026  CFFA F016          	movff	pclath,??_low_isr+3
   721  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
   722  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
   723  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
   724  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
   725  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
   726  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
   727  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
   728  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
   729  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
   730  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
   731  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
   732  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
   733  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
   734  00005E  C038  F024         	movff	btemp,??_low_isr+17
   735  000062  C039  F025         	movff	btemp+1,??_low_isr+18
   736  000066  C03A  F026         	movff	btemp+2,??_low_isr+19
   737  00006A  C03B  F027         	movff	btemp+3,??_low_isr+20
   738  00006E  C027  F03B         	movff	??_low_isr+20,btemp+3
   739  000072  C026  F03A         	movff	??_low_isr+19,btemp+2
   740  000076  C025  F039         	movff	??_low_isr+18,btemp+1
   741  00007A  C024  F038         	movff	??_low_isr+17,btemp
   742  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
   743  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
   744  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
   745  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
   746  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
   747  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
   748  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
   749  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
   750  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
   751  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
   752  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
   753  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
   754  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
   755  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
   756  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
   757  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
   758  0000BE  C013  FFD8         	movff	??_low_isr,status
   759  0000C2  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   760  0000C4  0010               	retfie	
   761  0000C6                     __end_of_low_isr:
   762                           	opt stack 0
   763                           pclatu	equ	0xFFB
   764                           pclath	equ	0xFFA
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           postinc0	equ	0xFEE
   772                           fsr0h	equ	0xFEA
   773                           fsr0l	equ	0xFE9
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1h	equ	0xFE2
   777                           fsr1l	equ	0xFE1
   778                           bsr	equ	0xFE0
   779                           fsr2h	equ	0xFDA
   780                           fsr2l	equ	0xFD9
   781                           status	equ	0xFD8
   782                           
   783 ;; *************** function _high_isr *****************
   784 ;; Defined at:
   785 ;;		line 27 in file "interrupts.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		None
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   799 ;;      Params:         0       0       0       0       0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0
   801 ;;      Temps:         18       0       0       0       0       0       0       0       0
   802 ;;      Totals:        18       0       0       0       0       0       0       0       0
   803 ;;Total ram usage:       18 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		Interrupt level 2
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	intcode
   813  000008                     __pintcode:
   814                           	opt stack 0
   815  000008                     _high_isr:
   816                           	opt stack 28
   817                           
   818                           ;incstack = 0
   819  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   820  00000A  EDDB  F000         	call	int_func,f	;refresh shadow registers
   821                           pclatu	equ	0xFFB
   822                           pclath	equ	0xFFA
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           prodh	equ	0xFF4
   828                           prodl	equ	0xFF3
   829                           postinc0	equ	0xFEE
   830                           fsr0h	equ	0xFEA
   831                           fsr0l	equ	0xFE9
   832                           wreg	equ	0xFE8
   833                           postdec1	equ	0xFE5
   834                           fsr1h	equ	0xFE2
   835                           fsr1l	equ	0xFE1
   836                           bsr	equ	0xFE0
   837                           fsr2h	equ	0xFDA
   838                           fsr2l	equ	0xFD9
   839                           status	equ	0xFD8
   840                           
   841                           	psect	intcode_body
   842  0001B6                     __pintcode_body:
   843                           	opt stack 28
   844  0001B6                     int_func:
   845                           	opt stack 28
   846  0001B6  0006               	pop		; remove dummy address from shadow register refresh
   847  0001B8  CFFA F001          	movff	pclath,??_high_isr
   848  0001BC  CFFB F002          	movff	pclatu,??_high_isr+1
   849  0001C0  CFE9 F003          	movff	fsr0l,??_high_isr+2
   850  0001C4  CFEA F004          	movff	fsr0h,??_high_isr+3
   851  0001C8  CFE1 F005          	movff	fsr1l,??_high_isr+4
   852  0001CC  CFE2 F006          	movff	fsr1h,??_high_isr+5
   853  0001D0  CFD9 F007          	movff	fsr2l,??_high_isr+6
   854  0001D4  CFDA F008          	movff	fsr2h,??_high_isr+7
   855  0001D8  CFF3 F009          	movff	prodl,??_high_isr+8
   856  0001DC  CFF4 F00A          	movff	prodh,??_high_isr+9
   857  0001E0  CFF6 F00B          	movff	tblptrl,??_high_isr+10
   858  0001E4  CFF7 F00C          	movff	tblptrh,??_high_isr+11
   859  0001E8  CFF8 F00D          	movff	tblptru,??_high_isr+12
   860  0001EC  CFF5 F00E          	movff	tablat,??_high_isr+13
   861  0001F0  C038  F00F         	movff	btemp,??_high_isr+14
   862  0001F4  C039  F010         	movff	btemp+1,??_high_isr+15
   863  0001F8  C03A  F011         	movff	btemp+2,??_high_isr+16
   864  0001FC  C03B  F012         	movff	btemp+3,??_high_isr+17
   865  000200  C012  F03B         	movff	??_high_isr+17,btemp+3
   866  000204  C011  F03A         	movff	??_high_isr+16,btemp+2
   867  000208  C010  F039         	movff	??_high_isr+15,btemp+1
   868  00020C  C00F  F038         	movff	??_high_isr+14,btemp
   869  000210  C00E  FFF5         	movff	??_high_isr+13,tablat
   870  000214  C00D  FFF8         	movff	??_high_isr+12,tblptru
   871  000218  C00C  FFF7         	movff	??_high_isr+11,tblptrh
   872  00021C  C00B  FFF6         	movff	??_high_isr+10,tblptrl
   873  000220  C00A  FFF4         	movff	??_high_isr+9,prodh
   874  000224  C009  FFF3         	movff	??_high_isr+8,prodl
   875  000228  C008  FFDA         	movff	??_high_isr+7,fsr2h
   876  00022C  C007  FFD9         	movff	??_high_isr+6,fsr2l
   877  000230  C006  FFE2         	movff	??_high_isr+5,fsr1h
   878  000234  C005  FFE1         	movff	??_high_isr+4,fsr1l
   879  000238  C004  FFEA         	movff	??_high_isr+3,fsr0h
   880  00023C  C003  FFE9         	movff	??_high_isr+2,fsr0l
   881  000240  C002  FFFB         	movff	??_high_isr+1,pclatu
   882  000244  C001  FFFA         	movff	??_high_isr,pclath
   883  000248  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   884  00024A  0011               	retfie		f
   885  00024C                     __end_of_high_isr:
   886                           	opt stack 0
   887  0000                     pclatu	equ	0xFFB
   888                           pclath	equ	0xFFA
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           prodh	equ	0xFF4
   894                           prodl	equ	0xFF3
   895                           postinc0	equ	0xFEE
   896                           fsr0h	equ	0xFEA
   897                           fsr0l	equ	0xFE9
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1h	equ	0xFE2
   901                           fsr1l	equ	0xFE1
   902                           bsr	equ	0xFE0
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           status	equ	0xFD8
   906                           pclatu	equ	0xFFB
   907                           pclath	equ	0xFFA
   908                           tblptru	equ	0xFF8
   909                           tblptrh	equ	0xFF7
   910                           tblptrl	equ	0xFF6
   911                           tablat	equ	0xFF5
   912                           prodh	equ	0xFF4
   913                           prodl	equ	0xFF3
   914                           postinc0	equ	0xFEE
   915                           fsr0h	equ	0xFEA
   916                           fsr0l	equ	0xFE9
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1h	equ	0xFE2
   920                           fsr1l	equ	0xFE1
   921                           bsr	equ	0xFE0
   922                           fsr2h	equ	0xFDA
   923                           fsr2l	equ	0xFD9
   924                           status	equ	0xFD8
   925                           
   926                           	psect	rparam
   927  0000                     pclatu	equ	0xFFB
   928                           pclath	equ	0xFFA
   929                           tblptru	equ	0xFF8
   930                           tblptrh	equ	0xFF7
   931                           tblptrl	equ	0xFF6
   932                           tablat	equ	0xFF5
   933                           prodh	equ	0xFF4
   934                           prodl	equ	0xFF3
   935                           postinc0	equ	0xFEE
   936                           fsr0h	equ	0xFEA
   937                           fsr0l	equ	0xFE9
   938                           wreg	equ	0xFE8
   939                           postdec1	equ	0xFE5
   940                           fsr1h	equ	0xFE2
   941                           fsr1l	equ	0xFE1
   942                           bsr	equ	0xFE0
   943                           fsr2h	equ	0xFDA
   944                           fsr2l	equ	0xFD9
   945                           status	equ	0xFD8
   946                           
   947                           	psect	temp
   948  000038                     btemp:
   949                           	opt stack 0
   950  000038                     	ds	1
   951  0000                     int$flags	set	btemp
   952  0000                     wtemp6	set	btemp+1
   953                           pclatu	equ	0xFFB
   954                           pclath	equ	0xFFA
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           prodh	equ	0xFF4
   960                           prodl	equ	0xFF3
   961                           postinc0	equ	0xFEE
   962                           fsr0h	equ	0xFEA
   963                           fsr0l	equ	0xFE9
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1h	equ	0xFE2
   967                           fsr1l	equ	0xFE1
   968                           bsr	equ	0xFE0
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      55
    BANK0           160      5       5
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_delay_ms

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_delay_ms

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     248
                                              3 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     248
                                             39 COMRAM     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _delay_ms

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      37       1       58.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3C      11        0.0%
DATA                 0      0      3C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Jun 14 16:11:23 2019

                          l51 014C                            l43 00F8                            l60 01A8  
                          l52 0150                            l44 011E                            l61 01AC  
                          l53 0184                            l46 0158                            l55 017E  
                          l47 013A                            l67 02A4                            l68 028E  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                         l900 017E                  __CFG_CPB$OFF 000000                           u300 0146  
                         u290 0132                  __CFG_CPD$OFF 000000                           u377 0296  
                __CFG_BOR$OFF 000000                           _per 0034                           wreg 000FE8  
                __CFG_FOSC$HS 000000                  __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000  
                        _LATA 000F89                          _main 00CA                          _duty 0036  
                        _t_on 0032                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0038                          prodh 000FF4  
                        prodl 000FF3                          start 00C6                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 02C4  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000                         ?_main 0001  
                       _PORTA 000F80                 __CFG_USBDIV$1 000000           _ConfigureOscillator 02C8  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _t_off 0030  
             __end_of_low_isr 00C6                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 0039          ?_ConfigureOscillator 0001  
             __initialization 024C                  __end_of_main 01B6                        ??_main 0063  
               __activetblptr 000000                        _ADCON1 000FC1                     ??_InitApp 0028  
       ??_ConfigureOscillator 0028              __end_of_delay_ms 02B2                __CFG_XINST$OFF 000000  
            __end_of_high_isr 024C                  __pdataCOMRAM 0034                     ??_low_isr 0013  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                  __accesstop 0060       __end_of__initialization 0278               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0001                    __pnvCOMRAM 0030  
                   ?_delay_ms 0028                     ?_high_isr 0001               __CFG_VREGEN$OFF 000000  
                     _InitApp 02B2                    _count_duty 002A                       __Hparam 0000  
                     __Lparam 0000               __CFG_STVREN$OFF 000000                       __pcinit 024C  
                     __ramtop 0800                       __ptext0 00CA                       __ptext1 0282  
                     __ptext2 02B2                       __ptext3 02C8                       _low_isr 0018  
                  ??_delay_ms 0060                    ??_high_isr 0001                __pintcode_body 01B6  
                  delay_ms@ms 0028          end_of_initialization 0278                       int_func 01B6  
                     postdec1 000FE5                       postinc0 000FEE                     _PORTAbits 000F80  
                   _TRISAbits 000F92   __end_of_ConfigureOscillator 02CA                 __pidataCOMRAM 02C4  
         start_initialization 024C              __CFG_LPT1OSC$OFF 000000                   __pbssCOMRAM 002A  
               __pcstackBANK0 0060             __size_of_delay_ms 0030             __size_of_high_isr 0244  
                    ?_InitApp 0001                     __pintcode 0008                   __pintcodelo 0018  
                    ?_low_isr 0001                      _LATAbits 000F89                     delay_ms@i 0061  
            __CFG_WDTPS$32768 000000                     copy_data0 0260              __size_of_InitApp 0012  
                    __Hrparam 0000                      __Lrparam 0000                      _dec_duty 002E  
                    _delay_ms 0282              __size_of_low_isr 00AE                      _high_isr 0008  
                    _inc_duty 002F                      _count_up 002C                 __size_of_main 00EC  
__size_of_ConfigureOscillator 0002                      int$flags 0038         __CFG_CPUDIV$OSC1_PLL2 000000  
                    intlevel1 0000                      intlevel2 0000  
