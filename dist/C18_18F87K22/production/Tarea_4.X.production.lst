

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Jun 17 11:37:28 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F2550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataBANK0
    62  000480                     __pidataBANK0:
    63                           	opt stack 0
    64                           
    65                           ;initializer for _duty
    66  000480  0001               	dw	1
    67                           
    68                           ;initializer for _per
    69  000482  00C8               	dw	200
    70                           
    71                           	psect	nvBANK0
    72  000070                     __pnvBANK0:
    73                           	opt stack 0
    74  000070                     _t_off:
    75                           	opt stack 0
    76  000070                     	ds	2
    77  000072                     _t_on:
    78                           	opt stack 0
    79  000072                     	ds	2
    80  0000                     _TRISAbits	set	3986
    81  0000                     _ADCON1	set	4033
    82  0000                     _LATA	set	3977
    83  0000                     _PORTA	set	3968
    84  0000                     _PORTAbits	set	3968
    85  0000                     _LATAbits	set	3977
    86                           
    87                           ; #config settings
    88  0000                     
    89                           	psect	cinit
    90  0003EC                     __pcinit:
    91                           	opt stack 0
    92  0003EC                     start_initialization:
    93                           	opt stack 0
    94  0003EC                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Initialize objects allocated to BANK0 (4 bytes)
    98                           ; load TBLPTR registers with __pidataBANK0
    99  0003EC  0E80               	movlw	low __pidataBANK0
   100  0003EE  6EF6               	movwf	tblptrl,c
   101  0003F0  0E04               	movlw	high __pidataBANK0
   102  0003F2  6EF7               	movwf	tblptrh,c
   103  0003F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   104  0003F6  6EF8               	movwf	tblptru,c
   105  0003F8  EE00  F074         	lfsr	0,__pdataBANK0
   106  0003FC  EE10 F004          	lfsr	1,4
   107  000400                     copy_data0:
   108  000400  0009               	tblrd		*+
   109  000402  CFF5 FFEE          	movff	tablat,postinc0
   110  000406  50E5               	movf	postdec1,w,c
   111  000408  50E1               	movf	fsr1l,w,c
   112  00040A  E1FA               	bnz	copy_data0
   113                           
   114                           ; Clear objects allocated to BANK0 (6 bytes)
   115  00040C  0100               	movlb	0
   116  00040E  6B6F               	clrf	(__pbssBANK0+5)& (0+255),b
   117  000410  6B6E               	clrf	(__pbssBANK0+4)& (0+255),b
   118  000412  6B6D               	clrf	(__pbssBANK0+3)& (0+255),b
   119  000414  6B6C               	clrf	(__pbssBANK0+2)& (0+255),b
   120  000416  6B6B               	clrf	(__pbssBANK0+1)& (0+255),b
   121  000418  6B6A               	clrf	__pbssBANK0& (0+255),b
   122  00041A                     end_of_initialization:
   123                           	opt stack 0
   124  00041A                     __end_of__initialization:
   125                           	opt stack 0
   126  00041A  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   127  00041C  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   128  00041E  0100               	movlb	0
   129  000420  EF65  F000         	goto	_main	;jump to C main() function
   130                           tblptru	equ	0xFF8
   131                           tblptrh	equ	0xFF7
   132                           tblptrl	equ	0xFF6
   133                           tablat	equ	0xFF5
   134                           postinc0	equ	0xFEE
   135                           postdec1	equ	0xFE5
   136                           fsr1l	equ	0xFE1
   137                           
   138                           	psect	bssBANK0
   139  00006A                     __pbssBANK0:
   140                           	opt stack 0
   141  00006A                     _count_duty:
   142                           	opt stack 0
   143  00006A                     	ds	2
   144  00006C                     _count_up:
   145                           	opt stack 0
   146  00006C                     	ds	2
   147  00006E                     _dec_duty:
   148                           	opt stack 0
   149  00006E                     	ds	1
   150  00006F                     _inc_duty:
   151                           	opt stack 0
   152  00006F                     	ds	1
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           postdec1	equ	0xFE5
   159                           fsr1l	equ	0xFE1
   160                           
   161                           	psect	dataBANK0
   162  000074                     __pdataBANK0:
   163                           	opt stack 0
   164  000074                     _duty:
   165                           	opt stack 0
   166  000074                     	ds	2
   167  000076                     _per:
   168                           	opt stack 0
   169  000076                     	ds	2
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	cstackBANK0
   179  000060                     __pcstackBANK0:
   180                           	opt stack 0
   181  000060                     ___aldiv@counter:
   182                           	opt stack 0
   183                           
   184                           ; 1 bytes @ 0x0
   185  000060                     	ds	1
   186  000061                     ___aldiv@sign:
   187                           	opt stack 0
   188                           
   189                           ; 1 bytes @ 0x1
   190  000061                     	ds	1
   191  000062                     ___aldiv@quotient:
   192                           	opt stack 0
   193                           
   194                           ; 4 bytes @ 0x2
   195  000062                     	ds	4
   196  000066                     main@max_cont_up:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x6
   200  000066                     	ds	2
   201  000068                     main@max_count_duty:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x8
   205  000068                     	ds	2
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	cstackCOMRAM
   215  000001                     __pcstackCOMRAM:
   216                           	opt stack 0
   217  000001                     ??_high_isr:
   218  000001                     
   219                           ; 1 bytes @ 0x0
   220  000001                     	ds	18
   221  000013                     ??_low_isr:
   222                           
   223                           ; 1 bytes @ 0x12
   224  000013                     	ds	21
   225  000028                     ?___wmul:
   226                           	opt stack 0
   227  000028                     ?___lwdiv:
   228                           	opt stack 0
   229  000028                     delay_100us@us:
   230                           	opt stack 0
   231  000028                     ___wmul@multiplier:
   232                           	opt stack 0
   233  000028                     ___lwdiv@dividend:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x27
   237  000028                     	ds	2
   238  00002A                     delay_100us@i:
   239                           	opt stack 0
   240  00002A                     ___wmul@multiplicand:
   241                           	opt stack 0
   242  00002A                     ___lwdiv@divisor:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x29
   246  00002A                     	ds	2
   247  00002C                     ___wmul@product:
   248                           	opt stack 0
   249  00002C                     ___lwdiv@quotient:
   250                           	opt stack 0
   251                           
   252                           ; 2 bytes @ 0x2B
   253  00002C                     	ds	2
   254  00002E                     ?___aldiv:
   255                           	opt stack 0
   256  00002E                     ___lwdiv@counter:
   257                           	opt stack 0
   258  00002E                     ___aldiv@dividend:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0x2D
   262  00002E                     	ds	4
   263  000032                     ___aldiv@divisor:
   264                           	opt stack 0
   265                           
   266                           ; 4 bytes @ 0x31
   267  000032                     	ds	4
   268  000036                     ??_main:
   269  000036                     
   270                           ; 1 bytes @ 0x35
   271  000036                     	ds	2
   272                           tblptru	equ	0xFF8
   273                           tblptrh	equ	0xFF7
   274                           tblptrl	equ	0xFF6
   275                           tablat	equ	0xFF5
   276                           postinc0	equ	0xFEE
   277                           postdec1	equ	0xFE5
   278                           fsr1l	equ	0xFE1
   279                           
   280 ;;
   281 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   282 ;;
   283 ;; *************** function _main *****************
   284 ;; Defined at:
   285 ;;		line 45 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;  max_count_du    2    8[BANK0 ] unsigned int 
   290 ;;  max_cont_up     2    6[BANK0 ] unsigned int 
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   300 ;;      Params:         0       0       0       0       0       0       0       0       0
   301 ;;      Locals:         0       4       0       0       0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0       0       0       0       0
   303 ;;      Totals:         2       4       0       0       0       0       0       0       0
   304 ;;Total ram usage:        6 bytes
   305 ;; Hardware stack levels required when called:    3
   306 ;; This function calls:
   307 ;;		_ConfigureOscillator
   308 ;;		_InitApp
   309 ;;		___aldiv
   310 ;;		___lwdiv
   311 ;;		___wmul
   312 ;;		_delay_100us
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319  0000CA                     __ptext0:
   320                           	opt stack 0
   321  0000CA                     _main:
   322                           	opt stack 28
   323                           
   324                           ;main.c: 48: ConfigureOscillator();
   325                           
   326                           ;incstack = 0
   327  0000CA  EC42  F002         	call	_ConfigureOscillator	;wreg free
   328                           
   329                           ;main.c: 51: InitApp();
   330  0000CE  EC37  F002         	call	_InitApp	;wreg free
   331                           
   332                           ;main.c: 54: unsigned int max_cont_up=20000/per;
   333  0000D2  0E4E               	movlw	78
   334  0000D4  6E29               	movwf	___lwdiv@dividend+1,c
   335  0000D6  0E20               	movlw	32
   336  0000D8  6E28               	movwf	___lwdiv@dividend,c
   337  0000DA  C076  F02A         	movff	_per,___lwdiv@divisor
   338  0000DE  C077  F02B         	movff	_per+1,___lwdiv@divisor+1
   339  0000E2  ECCD  F001         	call	___lwdiv	;wreg free
   340  0000E6  C028  F066         	movff	?___lwdiv,main@max_cont_up
   341  0000EA  C029  F067         	movff	?___lwdiv+1,main@max_cont_up+1
   342                           
   343                           ;main.c: 55: unsigned int max_count_duty=100000/(per*per);
   344  0000EE  0EA0               	movlw	160
   345  0000F0  6E2E               	movwf	___aldiv@dividend,c
   346  0000F2  0E86               	movlw	134
   347  0000F4  6E2F               	movwf	___aldiv@dividend+1,c
   348  0000F6  0E01               	movlw	1
   349  0000F8  6E30               	movwf	___aldiv@dividend+2,c
   350  0000FA  0E00               	movlw	0
   351  0000FC  6E31               	movwf	___aldiv@dividend+3,c
   352  0000FE  C076  F028         	movff	_per,___wmul@multiplier
   353  000102  C077  F029         	movff	_per+1,___wmul@multiplier+1
   354  000106  C076  F02A         	movff	_per,___wmul@multiplicand
   355  00010A  C077  F02B         	movff	_per+1,___wmul@multiplicand+1
   356  00010E  EC12  F002         	call	___wmul	;wreg free
   357  000112  C028  F032         	movff	?___wmul,___aldiv@divisor
   358  000116  C029  F033         	movff	?___wmul+1,___aldiv@divisor+1
   359  00011A  6A34               	clrf	___aldiv@divisor+2,c
   360  00011C  6A35               	clrf	___aldiv@divisor+3,c
   361  00011E  EC1B  F001         	call	___aldiv	;wreg free
   362  000122  C02E  F068         	movff	?___aldiv,main@max_count_duty
   363  000126  C02F  F069         	movff	?___aldiv+1,main@max_count_duty+1
   364                           
   365                           ;main.c: 56: t_on=duty;
   366  00012A  C074  F072         	movff	_duty,_t_on
   367  00012E  C075  F073         	movff	_duty+1,_t_on+1
   368                           
   369                           ;main.c: 57: t_off=per-duty;
   370  000132  C074  F036         	movff	_duty,??_main
   371  000136  C075  F037         	movff	_duty+1,??_main+1
   372  00013A  1E36               	comf	??_main,f,c
   373  00013C  1E37               	comf	??_main+1,f,c
   374  00013E  4A36               	infsnz	??_main,f,c
   375  000140  2A37               	incf	??_main+1,f,c
   376  000142  0100               	movlb	0	; () banked
   377  000144  5176               	movf	_per& (0+255),w,b
   378  000146  2436               	addwf	??_main,w,c
   379  000148  6F70               	movwf	_t_off& (0+255),b
   380  00014A  5177               	movf	(_per+1)& (0+255),w,b
   381  00014C  2037               	addwfc	??_main+1,w,c
   382  00014E  6F71               	movwf	(_t_off+1)& (0+255),b
   383  000150                     l954:
   384                           
   385                           ; BSR set to: 0
   386                           ;main.c: 59: {
   387                           ;main.c: 60: LATAbits.LA0=1;
   388  000150  8089               	bsf	3977,0,c	;volatile
   389                           
   390                           ; BSR set to: 0
   391                           ;main.c: 61: delay_100us(t_on);
   392  000152  C072  F028         	movff	_t_on,delay_100us@us
   393  000156  C073  F029         	movff	_t_on+1,delay_100us@us+1
   394  00015A  EC25  F002         	call	_delay_100us	;wreg free
   395                           
   396                           ;main.c: 62: LATAbits.LA0=0;
   397  00015E  9089               	bcf	3977,0,c	;volatile
   398                           
   399                           ;main.c: 63: delay_100us(t_off);
   400  000160  C070  F028         	movff	_t_off,delay_100us@us
   401  000164  C071  F029         	movff	_t_off+1,delay_100us@us+1
   402  000168  EC25  F002         	call	_delay_100us	;wreg free
   403                           
   404                           ;main.c: 64: if(PORTAbits.RA1==1){
   405  00016C  A280               	btfss	3968,1,c	;volatile
   406  00016E  D004               	goto	l44
   407                           
   408                           ;main.c: 65: count_up+=1;
   409  000170  0100               	movlb	0	; () banked
   410  000172  4B6C               	infsnz	_count_up& (0+255),f,b
   411  000174  2B6D               	incf	(_count_up+1)& (0+255),f,b
   412                           
   413                           ;main.c: 66: }
   414  000176  D01E               	goto	l46
   415  000178                     l44:
   416                           
   417                           ;main.c: 67: else if (count_up!=0) {
   418                           
   419                           ; BSR set to: 0
   420  000178  0100               	movlb	0	; () banked
   421  00017A  516C               	movf	_count_up& (0+255),w,b
   422  00017C  116D               	iorwf	(_count_up+1)& (0+255),w,b
   423  00017E  B4D8               	btfsc	status,2,c
   424  000180  D019               	goto	l46
   425                           
   426                           ; BSR set to: 0
   427                           ;main.c: 68: if(inc_duty || dec_duty){
   428  000182  516F               	movf	_inc_duty& (0+255),w,b
   429  000184  A4D8               	btfss	status,2,c
   430  000186  D003               	goto	u350
   431                           
   432                           ; BSR set to: 0
   433  000188  516E               	movf	_dec_duty& (0+255),w,b
   434  00018A  B4D8               	btfsc	status,2,c
   435  00018C  D004               	goto	l47
   436  00018E                     u350:
   437                           
   438                           ; BSR set to: 0
   439                           ;main.c: 69: inc_duty=0;
   440                           
   441                           ; BSR set to: 0
   442  00018E  0E00               	movlw	0
   443  000190  6F6F               	movwf	_inc_duty& (0+255),b
   444                           
   445                           ;main.c: 70: dec_duty=0;
   446  000192  0E00               	movlw	0
   447  000194  D007               	goto	L1
   448  000196                     l47:
   449                           
   450                           ; BSR set to: 0
   451                           ;main.c: 72: else if(count_up>max_cont_up) {
   452                           
   453                           ; BSR set to: 0
   454  000196  516C               	movf	_count_up& (0+255),w,b
   455  000198  5D66               	subwf	main@max_cont_up& (0+255),w,b
   456  00019A  516D               	movf	(_count_up+1)& (0+255),w,b
   457  00019C  5967               	subwfb	(main@max_cont_up+1)& (0+255),w,b
   458  00019E  B0D8               	btfsc	status,0,c
   459  0001A0  D003               	goto	l51
   460                           
   461                           ; BSR set to: 0
   462                           ;main.c: 73: dec_duty=1;
   463  0001A2  0E01               	movlw	1
   464  0001A4                     L1:
   465  0001A4  6F6E               	movwf	_dec_duty& (0+255),b
   466                           
   467                           ;main.c: 74: }
   468  0001A6  D002               	goto	l52
   469  0001A8                     l51:
   470                           
   471                           ; BSR set to: 0
   472                           ;main.c: 75: else {
   473                           ;main.c: 76: inc_duty=1;
   474                           
   475                           ; BSR set to: 0
   476  0001A8  0E01               	movlw	1
   477  0001AA  6F6F               	movwf	_inc_duty& (0+255),b
   478  0001AC                     l52:
   479                           
   480                           ; BSR set to: 0
   481                           ;main.c: 77: }
   482                           ;main.c: 78: count_up=0;
   483                           
   484                           ; BSR set to: 0
   485  0001AC  0E00               	movlw	0
   486  0001AE  6F6D               	movwf	(_count_up+1)& (0+255),b
   487  0001B0  0E00               	movlw	0
   488  0001B2  6F6C               	movwf	_count_up& (0+255),b
   489  0001B4                     l46:
   490                           
   491                           ; BSR set to: 0
   492                           ;main.c: 79: }
   493                           ;main.c: 80: if(inc_duty){
   494                           
   495                           ; BSR set to: 0
   496  0001B4  516F               	movf	_inc_duty& (0+255),w,b
   497  0001B6  B4D8               	btfsc	status,2,c
   498  0001B8  D01A               	goto	l53
   499                           
   500                           ; BSR set to: 0
   501                           ;main.c: 81: count_duty+=1;
   502  0001BA  4B6A               	infsnz	_count_duty& (0+255),f,b
   503  0001BC  2B6B               	incf	(_count_duty+1)& (0+255),f,b
   504                           
   505                           ; BSR set to: 0
   506                           ;main.c: 83: if(count_duty==max_count_duty){
   507  0001BE  5168               	movf	main@max_count_duty& (0+255),w,b
   508  0001C0  196A               	xorwf	_count_duty& (0+255),w,b
   509  0001C2  E1C6               	bnz	l954
   510  0001C4  5169               	movf	(main@max_count_duty+1)& (0+255),w,b
   511  0001C6  196B               	xorwf	(_count_duty+1)& (0+255),w,b
   512  0001C8  A4D8               	btfss	status,2,c
   513  0001CA  D7C2               	goto	l43
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 84: if(duty<per){
   517  0001CC  5176               	movf	_per& (0+255),w,b
   518  0001CE  5D74               	subwf	_duty& (0+255),w,b
   519  0001D0  5177               	movf	(_per+1)& (0+255),w,b
   520  0001D2  5975               	subwfb	(_duty+1)& (0+255),w,b
   521  0001D4  B0D8               	btfsc	status,0,c
   522  0001D6  D003               	goto	l55
   523                           
   524                           ; BSR set to: 0
   525                           ;main.c: 85: duty+=1;
   526  0001D8  4B74               	infsnz	_duty& (0+255),f,b
   527  0001DA  2B75               	incf	(_duty+1)& (0+255),f,b
   528                           
   529                           ;main.c: 86: }
   530  0001DC  D01E               	goto	l61
   531  0001DE                     l55:
   532                           
   533                           ; BSR set to: 0
   534                           ;main.c: 87: else{
   535                           ;main.c: 88: inc_duty=0;
   536                           
   537                           ; BSR set to: 0
   538  0001DE  0E00               	movlw	0
   539  0001E0  6F6F               	movwf	_inc_duty& (0+255),b
   540  0001E2  D01B               	goto	l61
   541  0001E4                     l990:
   542                           
   543                           ; BSR set to: 0
   544                           ;main.c: 91: t_on=duty;
   545  0001E4  C074  F072         	movff	_duty,_t_on
   546  0001E8  C075  F073         	movff	_duty+1,_t_on+1
   547  0001EC  D01B               	goto	l1008
   548  0001EE                     l53:
   549                           
   550                           ; BSR set to: 0
   551                           ;main.c: 95: else if(dec_duty){
   552                           
   553                           ; BSR set to: 0
   554  0001EE  516E               	movf	_dec_duty& (0+255),w,b
   555  0001F0  B4D8               	btfsc	status,2,c
   556  0001F2  D7AE               	goto	l43
   557                           
   558                           ; BSR set to: 0
   559                           ;main.c: 96: count_duty+=1;
   560  0001F4  4B6A               	infsnz	_count_duty& (0+255),f,b
   561  0001F6  2B6B               	incf	(_count_duty+1)& (0+255),f,b
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 97: if(count_duty==max_count_duty){
   565  0001F8  5168               	movf	main@max_count_duty& (0+255),w,b
   566  0001FA  196A               	xorwf	_count_duty& (0+255),w,b
   567  0001FC  E1A9               	bnz	l954
   568  0001FE  5169               	movf	(main@max_count_duty+1)& (0+255),w,b
   569  000200  196B               	xorwf	(_count_duty+1)& (0+255),w,b
   570  000202  A4D8               	btfss	status,2,c
   571  000204  D7A5               	goto	l43
   572                           
   573                           ; BSR set to: 0
   574                           ;main.c: 98: if(duty>0){
   575  000206  5174               	movf	_duty& (0+255),w,b
   576  000208  1175               	iorwf	(_duty+1)& (0+255),w,b
   577  00020A  B4D8               	btfsc	status,2,c
   578  00020C  D004               	goto	l60
   579                           
   580                           ; BSR set to: 0
   581                           ;main.c: 99: duty-=1;
   582  00020E  0774               	decf	_duty& (0+255),f,b
   583  000210  A0D8               	btfss	status,0,c
   584  000212  0775               	decf	(_duty+1)& (0+255),f,b
   585                           
   586                           ;main.c: 100: }
   587  000214  D002               	goto	l61
   588  000216                     l60:
   589                           
   590                           ; BSR set to: 0
   591                           ;main.c: 101: else{
   592                           ;main.c: 102: dec_duty=0;
   593                           
   594                           ; BSR set to: 0
   595  000216  0E00               	movlw	0
   596  000218  6F6E               	movwf	_dec_duty& (0+255),b
   597  00021A                     l61:
   598                           
   599                           ; BSR set to: 0
   600                           ;main.c: 103: }
   601                           ;main.c: 104: count_duty=0;
   602  00021A  0E00               	movlw	0
   603  00021C  6F6B               	movwf	(_count_duty+1)& (0+255),b
   604  00021E  0E00               	movlw	0
   605  000220  6F6A               	movwf	_count_duty& (0+255),b
   606  000222  D7E0               	goto	l990
   607  000224                     l1008:
   608                           
   609                           ; BSR set to: 0
   610                           ;main.c: 106: t_off=per-duty;
   611  000224  C074  F036         	movff	_duty,??_main
   612  000228  C075  F037         	movff	_duty+1,??_main+1
   613  00022C  1E36               	comf	??_main,f,c
   614  00022E  1E37               	comf	??_main+1,f,c
   615  000230  4A36               	infsnz	??_main,f,c
   616  000232  2A37               	incf	??_main+1,f,c
   617  000234  D787               	goto	L2
   618  000236                     __end_of_main:
   619                           	opt stack 0
   620                           tblptru	equ	0xFF8
   621                           tblptrh	equ	0xFF7
   622                           tblptrl	equ	0xFF6
   623                           tablat	equ	0xFF5
   624                           postinc0	equ	0xFEE
   625                           postdec1	equ	0xFE5
   626                           fsr1l	equ	0xFE1
   627                           status	equ	0xFD8
   628                           
   629 ;; *************** function _delay_100us *****************
   630 ;; Defined at:
   631 ;;		line 114 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  us              2   39[COMRAM] unsigned int 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  i               2   41[COMRAM] unsigned int 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   645 ;;      Params:         2       0       0       0       0       0       0       0       0
   646 ;;      Locals:         2       0       0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0
   648 ;;      Totals:         4       0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        4 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text1
   660  00044A                     __ptext1:
   661                           	opt stack 0
   662  00044A                     _delay_100us:
   663                           	opt stack 28
   664                           
   665                           ;main.c: 115: unsigned int i;
   666                           ;main.c: 116: for(i=0;i<us;i++){
   667                           
   668                           ; BSR set to: 0
   669                           ;incstack = 0
   670  00044A  0E00               	movlw	0
   671  00044C  6E2B               	movwf	delay_100us@i+1,c
   672  00044E  0E00               	movlw	0
   673  000450  6E2A               	movwf	delay_100us@i,c
   674  000452  D006               	goto	l67
   675  000454                     
   676                           ;main.c: 117: _delay((unsigned long)((100)*(20000000/4000000.0)));
   677  000454  0EA6               	movlw	166
   678  000456                     u437:
   679  000456  2EE8               	decfsz	wreg,f,c
   680  000458  D7FE               	bra	u437
   681  00045A  D000               	nop2	
   682  00045C  4A2A               	infsnz	delay_100us@i,f,c
   683  00045E  2A2B               	incf	delay_100us@i+1,f,c
   684  000460                     l67:
   685  000460  5028               	movf	delay_100us@us,w,c
   686  000462  5C2A               	subwf	delay_100us@i,w,c
   687  000464  5029               	movf	delay_100us@us+1,w,c
   688  000466  582B               	subwfb	delay_100us@i+1,w,c
   689  000468  B0D8               	btfsc	status,0,c
   690  00046A  0012               	return	
   691  00046C  D7F3               	goto	l68
   692  00046E                     __end_of_delay_100us:
   693                           	opt stack 0
   694                           tblptru	equ	0xFF8
   695                           tblptrh	equ	0xFF7
   696                           tblptrl	equ	0xFF6
   697                           tablat	equ	0xFF5
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           postdec1	equ	0xFE5
   701                           fsr1l	equ	0xFE1
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function ___wmul *****************
   705 ;; Defined at:
   706 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  multiplier      2   39[COMRAM] unsigned int 
   709 ;;  multiplicand    2   41[COMRAM] unsigned int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;  product         2   43[COMRAM] unsigned int 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  2   39[COMRAM] unsigned int 
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0, prodl, prodh
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   721 ;;      Params:         4       0       0       0       0       0       0       0       0
   722 ;;      Locals:         2       0       0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0
   724 ;;      Totals:         6       0       0       0       0       0       0       0       0
   725 ;;Total ram usage:        6 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; Hardware stack levels required when called:    2
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_main
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736  000424                     __ptext2:
   737                           	opt stack 0
   738  000424                     ___wmul:
   739                           	opt stack 28
   740                           
   741                           ;incstack = 0
   742  000424  5028               	movf	___wmul@multiplier,w,c
   743  000426  022A               	mulwf	___wmul@multiplicand,c
   744  000428  CFF3 F02C          	movff	prodl,___wmul@product
   745  00042C  CFF4 F02D          	movff	prodh,___wmul@product+1
   746  000430  5028               	movf	___wmul@multiplier,w,c
   747  000432  022B               	mulwf	___wmul@multiplicand+1,c
   748  000434  50F3               	movf	prodl,w,c
   749  000436  262D               	addwf	___wmul@product+1,f,c
   750  000438  5029               	movf	___wmul@multiplier+1,w,c
   751  00043A  022A               	mulwf	___wmul@multiplicand,c
   752  00043C  50F3               	movf	prodl,w,c
   753  00043E  262D               	addwf	___wmul@product+1,f,c
   754  000440  C02C  F028         	movff	___wmul@product,?___wmul
   755  000444  C02D  F029         	movff	___wmul@product+1,?___wmul+1
   756  000448  0012               	return	
   757  00044A                     __end_of___wmul:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           prodh	equ	0xFF4
   764                           prodl	equ	0xFF3
   765                           postinc0	equ	0xFEE
   766                           wreg	equ	0xFE8
   767                           postdec1	equ	0xFE5
   768                           fsr1l	equ	0xFE1
   769                           status	equ	0xFD8
   770                           
   771 ;; *************** function ___lwdiv *****************
   772 ;; Defined at:
   773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  dividend        2   39[COMRAM] unsigned int 
   776 ;;  divisor         2   41[COMRAM] unsigned int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  quotient        2   43[COMRAM] unsigned int 
   779 ;;  counter         1   45[COMRAM] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  2   39[COMRAM] unsigned int 
   782 ;; Registers used:
   783 ;;		wreg, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   789 ;;      Params:         4       0       0       0       0       0       0       0       0
   790 ;;      Locals:         3       0       0       0       0       0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0
   792 ;;      Totals:         7       0       0       0       0       0       0       0       0
   793 ;;Total ram usage:        7 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text3
   804  00039A                     __ptext3:
   805                           	opt stack 0
   806  00039A                     ___lwdiv:
   807                           	opt stack 28
   808                           
   809                           ;incstack = 0
   810  00039A  0E00               	movlw	0
   811  00039C  6E2D               	movwf	___lwdiv@quotient+1,c
   812  00039E  0E00               	movlw	0
   813  0003A0  6E2C               	movwf	___lwdiv@quotient,c
   814  0003A2  502A               	movf	___lwdiv@divisor,w,c
   815  0003A4  102B               	iorwf	___lwdiv@divisor+1,w,c
   816  0003A6  B4D8               	btfsc	status,2,c
   817  0003A8  D01C               	goto	l493
   818  0003AA  0E01               	movlw	1
   819  0003AC  6E2E               	movwf	___lwdiv@counter,c
   820  0003AE  D004               	goto	l488
   821  0003B0  90D8               	bcf	status,0,c
   822  0003B2  362A               	rlcf	___lwdiv@divisor,f,c
   823  0003B4  362B               	rlcf	___lwdiv@divisor+1,f,c
   824  0003B6  2A2E               	incf	___lwdiv@counter,f,c
   825  0003B8                     l488:
   826  0003B8  AE2B               	btfss	___lwdiv@divisor+1,7,c
   827  0003BA  D7FA               	goto	l489
   828  0003BC                     u300:
   829  0003BC  90D8               	bcf	status,0,c
   830  0003BE  362C               	rlcf	___lwdiv@quotient,f,c
   831  0003C0  362D               	rlcf	___lwdiv@quotient+1,f,c
   832  0003C2  502A               	movf	___lwdiv@divisor,w,c
   833  0003C4  5C28               	subwf	___lwdiv@dividend,w,c
   834  0003C6  502B               	movf	___lwdiv@divisor+1,w,c
   835  0003C8  5829               	subwfb	___lwdiv@dividend+1,w,c
   836  0003CA  A0D8               	btfss	status,0,c
   837  0003CC  D005               	goto	l492
   838  0003CE  502A               	movf	___lwdiv@divisor,w,c
   839  0003D0  5E28               	subwf	___lwdiv@dividend,f,c
   840  0003D2  502B               	movf	___lwdiv@divisor+1,w,c
   841  0003D4  5A29               	subwfb	___lwdiv@dividend+1,f,c
   842  0003D6  802C               	bsf	___lwdiv@quotient,0,c
   843  0003D8                     l492:
   844  0003D8  90D8               	bcf	status,0,c
   845  0003DA  322B               	rrcf	___lwdiv@divisor+1,f,c
   846  0003DC  322A               	rrcf	___lwdiv@divisor,f,c
   847  0003DE  2E2E               	decfsz	___lwdiv@counter,f,c
   848  0003E0  D7ED               	goto	u300
   849  0003E2                     l493:
   850  0003E2  C02C  F028         	movff	___lwdiv@quotient,?___lwdiv
   851  0003E6  C02D  F029         	movff	___lwdiv@quotient+1,?___lwdiv+1
   852  0003EA  0012               	return		;funcret
   853  0003EC                     __end_of___lwdiv:
   854                           	opt stack 0
   855                           tblptru	equ	0xFF8
   856                           tblptrh	equ	0xFF7
   857                           tblptrl	equ	0xFF6
   858                           tablat	equ	0xFF5
   859                           prodh	equ	0xFF4
   860                           prodl	equ	0xFF3
   861                           postinc0	equ	0xFEE
   862                           wreg	equ	0xFE8
   863                           postdec1	equ	0xFE5
   864                           fsr1l	equ	0xFE1
   865                           status	equ	0xFD8
   866                           
   867 ;; *************** function ___aldiv *****************
   868 ;; Defined at:
   869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  dividend        4   45[COMRAM] long 
   872 ;;  divisor         4   49[COMRAM] long 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  quotient        4    2[BANK0 ] long 
   875 ;;  sign            1    1[BANK0 ] unsigned char 
   876 ;;  counter         1    0[BANK0 ] unsigned char 
   877 ;; Return value:  Size  Location     Type
   878 ;;                  4   45[COMRAM] long 
   879 ;; Registers used:
   880 ;;		wreg, status,2, status,0
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   886 ;;      Params:         8       0       0       0       0       0       0       0       0
   887 ;;      Locals:         0       6       0       0       0       0       0       0       0
   888 ;;      Temps:          0       0       0       0       0       0       0       0       0
   889 ;;      Totals:         8       6       0       0       0       0       0       0       0
   890 ;;Total ram usage:       14 bytes
   891 ;; Hardware stack levels used:    1
   892 ;; Hardware stack levels required when called:    2
   893 ;; This function calls:
   894 ;;		Nothing
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text4
   901  000236                     __ptext4:
   902                           	opt stack 0
   903  000236                     ___aldiv:
   904                           	opt stack 28
   905                           
   906                           ;incstack = 0
   907  000236  0E00               	movlw	0
   908  000238  0100               	movlb	0	; () banked
   909  00023A  6F61               	movwf	___aldiv@sign& (0+255),b
   910                           
   911                           ; BSR set to: 0
   912  00023C  AE35               	btfss	___aldiv@divisor+3,7,c
   913  00023E  D00A               	goto	l140
   914                           
   915                           ; BSR set to: 0
   916  000240  1E35               	comf	___aldiv@divisor+3,f,c
   917  000242  1E34               	comf	___aldiv@divisor+2,f,c
   918  000244  1E33               	comf	___aldiv@divisor+1,f,c
   919  000246  6C32               	negf	___aldiv@divisor,c
   920  000248  0E00               	movlw	0
   921  00024A  2233               	addwfc	___aldiv@divisor+1,f,c
   922  00024C  2234               	addwfc	___aldiv@divisor+2,f,c
   923  00024E  2235               	addwfc	___aldiv@divisor+3,f,c
   924                           
   925                           ; BSR set to: 0
   926  000250  0E01               	movlw	1
   927  000252  6F61               	movwf	___aldiv@sign& (0+255),b
   928  000254                     l140:
   929                           
   930                           ; BSR set to: 0
   931                           
   932                           ; BSR set to: 0
   933  000254  AE31               	btfss	___aldiv@dividend+3,7,c
   934  000256  D00A               	goto	l141
   935                           
   936                           ; BSR set to: 0
   937  000258  1E31               	comf	___aldiv@dividend+3,f,c
   938  00025A  1E30               	comf	___aldiv@dividend+2,f,c
   939  00025C  1E2F               	comf	___aldiv@dividend+1,f,c
   940  00025E  6C2E               	negf	___aldiv@dividend,c
   941  000260  0E00               	movlw	0
   942  000262  222F               	addwfc	___aldiv@dividend+1,f,c
   943  000264  2230               	addwfc	___aldiv@dividend+2,f,c
   944  000266  2231               	addwfc	___aldiv@dividend+3,f,c
   945                           
   946                           ; BSR set to: 0
   947  000268  0E01               	movlw	1
   948  00026A  1B61               	xorwf	___aldiv@sign& (0+255),f,b
   949  00026C                     l141:
   950                           
   951                           ; BSR set to: 0
   952                           
   953                           ; BSR set to: 0
   954  00026C  0E00               	movlw	0
   955  00026E  6F62               	movwf	___aldiv@quotient& (0+255),b
   956  000270  0E00               	movlw	0
   957  000272  6F63               	movwf	(___aldiv@quotient+1)& (0+255),b
   958  000274  0E00               	movlw	0
   959  000276  6F64               	movwf	(___aldiv@quotient+2)& (0+255),b
   960  000278  0E00               	movlw	0
   961  00027A  6F65               	movwf	(___aldiv@quotient+3)& (0+255),b
   962                           
   963                           ; BSR set to: 0
   964  00027C  5032               	movf	___aldiv@divisor,w,c
   965  00027E  1033               	iorwf	___aldiv@divisor+1,w,c
   966  000280  1034               	iorwf	___aldiv@divisor+2,w,c
   967  000282  1035               	iorwf	___aldiv@divisor+3,w,c
   968  000284  B4D8               	btfsc	status,2,c
   969  000286  D02A               	goto	l148
   970                           
   971                           ; BSR set to: 0
   972  000288  0E01               	movlw	1
   973  00028A  6F60               	movwf	___aldiv@counter& (0+255),b
   974  00028C  D006               	goto	l143
   975  00028E                     
   976                           ; BSR set to: 0
   977                           
   978                           ; BSR set to: 0
   979  00028E  90D8               	bcf	status,0,c
   980  000290  3632               	rlcf	___aldiv@divisor,f,c
   981  000292  3633               	rlcf	___aldiv@divisor+1,f,c
   982  000294  3634               	rlcf	___aldiv@divisor+2,f,c
   983  000296  3635               	rlcf	___aldiv@divisor+3,f,c
   984  000298  2B60               	incf	___aldiv@counter& (0+255),f,b
   985  00029A                     l143:
   986                           
   987                           ; BSR set to: 0
   988                           
   989                           ; BSR set to: 0
   990  00029A  AE35               	btfss	___aldiv@divisor+3,7,c
   991  00029C  D7F8               	goto	l144
   992  00029E                     u260:
   993                           
   994                           ; BSR set to: 0
   995                           
   996                           ; BSR set to: 0
   997                           
   998                           ; BSR set to: 0
   999  00029E  90D8               	bcf	status,0,c
  1000  0002A0  3762               	rlcf	___aldiv@quotient& (0+255),f,b
  1001  0002A2  3763               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1002  0002A4  3764               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1003  0002A6  3765               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1004                           
  1005                           ; BSR set to: 0
  1006  0002A8  5032               	movf	___aldiv@divisor,w,c
  1007  0002AA  5C2E               	subwf	___aldiv@dividend,w,c
  1008  0002AC  5033               	movf	___aldiv@divisor+1,w,c
  1009  0002AE  582F               	subwfb	___aldiv@dividend+1,w,c
  1010  0002B0  5034               	movf	___aldiv@divisor+2,w,c
  1011  0002B2  5830               	subwfb	___aldiv@dividend+2,w,c
  1012  0002B4  5035               	movf	___aldiv@divisor+3,w,c
  1013  0002B6  5831               	subwfb	___aldiv@dividend+3,w,c
  1014  0002B8  A0D8               	btfss	status,0,c
  1015  0002BA  D009               	goto	l147
  1016                           
  1017                           ; BSR set to: 0
  1018  0002BC  5032               	movf	___aldiv@divisor,w,c
  1019  0002BE  5E2E               	subwf	___aldiv@dividend,f,c
  1020  0002C0  5033               	movf	___aldiv@divisor+1,w,c
  1021  0002C2  5A2F               	subwfb	___aldiv@dividend+1,f,c
  1022  0002C4  5034               	movf	___aldiv@divisor+2,w,c
  1023  0002C6  5A30               	subwfb	___aldiv@dividend+2,f,c
  1024  0002C8  5035               	movf	___aldiv@divisor+3,w,c
  1025  0002CA  5A31               	subwfb	___aldiv@dividend+3,f,c
  1026                           
  1027                           ; BSR set to: 0
  1028  0002CC  8162               	bsf	___aldiv@quotient& (0+255),0,b
  1029  0002CE                     l147:
  1030                           
  1031                           ; BSR set to: 0
  1032                           
  1033                           ; BSR set to: 0
  1034  0002CE  90D8               	bcf	status,0,c
  1035  0002D0  3235               	rrcf	___aldiv@divisor+3,f,c
  1036  0002D2  3234               	rrcf	___aldiv@divisor+2,f,c
  1037  0002D4  3233               	rrcf	___aldiv@divisor+1,f,c
  1038  0002D6  3232               	rrcf	___aldiv@divisor,f,c
  1039                           
  1040                           ; BSR set to: 0
  1041  0002D8  2F60               	decfsz	___aldiv@counter& (0+255),f,b
  1042  0002DA  D7E1               	goto	u260
  1043  0002DC                     l148:
  1044                           
  1045                           ; BSR set to: 0
  1046                           
  1047                           ; BSR set to: 0
  1048                           
  1049                           ; BSR set to: 0
  1050  0002DC  5161               	movf	___aldiv@sign& (0+255),w,b
  1051  0002DE  B4D8               	btfsc	status,2,c
  1052  0002E0  D008               	goto	l149
  1053                           
  1054                           ; BSR set to: 0
  1055  0002E2  1F65               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1056  0002E4  1F64               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1057  0002E6  1F63               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1058  0002E8  6D62               	negf	___aldiv@quotient& (0+255),b
  1059  0002EA  0E00               	movlw	0
  1060  0002EC  2363               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1061  0002EE  2364               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1062  0002F0  2365               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1063  0002F2                     l149:
  1064                           
  1065                           ; BSR set to: 0
  1066                           
  1067                           ; BSR set to: 0
  1068  0002F2  C062  F02E         	movff	___aldiv@quotient,?___aldiv
  1069  0002F6  C063  F02F         	movff	___aldiv@quotient+1,?___aldiv+1
  1070  0002FA  C064  F030         	movff	___aldiv@quotient+2,?___aldiv+2
  1071  0002FE  C065  F031         	movff	___aldiv@quotient+3,?___aldiv+3
  1072  000302  0012               	return	
  1073  000304                     __end_of___aldiv:
  1074                           	opt stack 0
  1075                           tblptru	equ	0xFF8
  1076                           tblptrh	equ	0xFF7
  1077                           tblptrl	equ	0xFF6
  1078                           tablat	equ	0xFF5
  1079                           prodh	equ	0xFF4
  1080                           prodl	equ	0xFF3
  1081                           postinc0	equ	0xFEE
  1082                           wreg	equ	0xFE8
  1083                           postdec1	equ	0xFE5
  1084                           fsr1l	equ	0xFE1
  1085                           status	equ	0xFD8
  1086                           
  1087 ;; *************** function _InitApp *****************
  1088 ;; Defined at:
  1089 ;;		line 28 in file "user.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;		None
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;		None
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, status,2
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0
  1104 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1106 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:        0 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; Hardware stack levels required when called:    2
  1110 ;; This function calls:
  1111 ;;		Nothing
  1112 ;; This function is called by:
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text5
  1118  00046E                     __ptext5:
  1119                           	opt stack 0
  1120  00046E                     _InitApp:
  1121                           	opt stack 28
  1122                           
  1123                           ;user.c: 31: PORTA=0;
  1124                           
  1125                           ; BSR set to: 0
  1126                           ;incstack = 0
  1127  00046E  0E00               	movlw	0
  1128  000470  6E80               	movwf	3968,c	;volatile
  1129                           
  1130                           ;user.c: 33: LATA=0;
  1131  000472  0E00               	movlw	0
  1132  000474  6E89               	movwf	3977,c	;volatile
  1133                           
  1134                           ;user.c: 35: ADCON1=0x0F;
  1135  000476  0E0F               	movlw	15
  1136  000478  6EC1               	movwf	4033,c	;volatile
  1137                           
  1138                           ;user.c: 38: TRISAbits.RA0=0;
  1139  00047A  9092               	bcf	3986,0,c	;volatile
  1140                           
  1141                           ;user.c: 39: TRISAbits.RA1=1;
  1142  00047C  8292               	bsf	3986,1,c	;volatile
  1143  00047E  0012               	return		;funcret
  1144  000480                     __end_of_InitApp:
  1145                           	opt stack 0
  1146                           tblptru	equ	0xFF8
  1147                           tblptrh	equ	0xFF7
  1148                           tblptrl	equ	0xFF6
  1149                           tablat	equ	0xFF5
  1150                           prodh	equ	0xFF4
  1151                           prodl	equ	0xFF3
  1152                           postinc0	equ	0xFEE
  1153                           wreg	equ	0xFE8
  1154                           postdec1	equ	0xFE5
  1155                           fsr1l	equ	0xFE1
  1156                           status	equ	0xFD8
  1157                           
  1158 ;; *************** function _ConfigureOscillator *****************
  1159 ;; Defined at:
  1160 ;;		line 24 in file "system.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		None
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1174 ;;      Params:         0       0       0       0       0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1177 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1178 ;;Total ram usage:        0 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    2
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text6
  1189  000484                     __ptext6:
  1190                           	opt stack 0
  1191  000484                     _ConfigureOscillator:
  1192                           	opt stack 28
  1193                           
  1194                           ;incstack = 0
  1195  000484  0012               	return		;funcret
  1196  000486                     __end_of_ConfigureOscillator:
  1197                           	opt stack 0
  1198                           tblptru	equ	0xFF8
  1199                           tblptrh	equ	0xFF7
  1200                           tblptrl	equ	0xFF6
  1201                           tablat	equ	0xFF5
  1202                           prodh	equ	0xFF4
  1203                           prodl	equ	0xFF3
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _low_isr *****************
  1211 ;; Defined at:
  1212 ;;		line 67 in file "interrupts.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		None
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1228 ;;      Temps:         21       0       0       0       0       0       0       0       0
  1229 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:       21 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    1
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		Interrupt level 1
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           	psect	intcodelo
  1241  000018                     __pintcodelo:
  1242                           	opt stack 0
  1243  000018                     _low_isr:
  1244                           	opt stack 28
  1245                           
  1246                           ;incstack = 0
  1247  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1248  00001A  CFD8 F013          	movff	status,??_low_isr
  1249  00001E  CFE8 F014          	movff	wreg,??_low_isr+1
  1250  000022  CFE0 F015          	movff	bsr,??_low_isr+2
  1251  000026  CFFA F016          	movff	pclath,??_low_isr+3
  1252  00002A  CFFB F017          	movff	pclatu,??_low_isr+4
  1253  00002E  CFE9 F018          	movff	fsr0l,??_low_isr+5
  1254  000032  CFEA F019          	movff	fsr0h,??_low_isr+6
  1255  000036  CFE1 F01A          	movff	fsr1l,??_low_isr+7
  1256  00003A  CFE2 F01B          	movff	fsr1h,??_low_isr+8
  1257  00003E  CFD9 F01C          	movff	fsr2l,??_low_isr+9
  1258  000042  CFDA F01D          	movff	fsr2h,??_low_isr+10
  1259  000046  CFF3 F01E          	movff	prodl,??_low_isr+11
  1260  00004A  CFF4 F01F          	movff	prodh,??_low_isr+12
  1261  00004E  CFF6 F020          	movff	tblptrl,??_low_isr+13
  1262  000052  CFF7 F021          	movff	tblptrh,??_low_isr+14
  1263  000056  CFF8 F022          	movff	tblptru,??_low_isr+15
  1264  00005A  CFF5 F023          	movff	tablat,??_low_isr+16
  1265  00005E  C038  F024         	movff	btemp,??_low_isr+17
  1266  000062  C039  F025         	movff	btemp+1,??_low_isr+18
  1267  000066  C03A  F026         	movff	btemp+2,??_low_isr+19
  1268  00006A  C03B  F027         	movff	btemp+3,??_low_isr+20
  1269  00006E  C027  F03B         	movff	??_low_isr+20,btemp+3
  1270  000072  C026  F03A         	movff	??_low_isr+19,btemp+2
  1271  000076  C025  F039         	movff	??_low_isr+18,btemp+1
  1272  00007A  C024  F038         	movff	??_low_isr+17,btemp
  1273  00007E  C023  FFF5         	movff	??_low_isr+16,tablat
  1274  000082  C022  FFF8         	movff	??_low_isr+15,tblptru
  1275  000086  C021  FFF7         	movff	??_low_isr+14,tblptrh
  1276  00008A  C020  FFF6         	movff	??_low_isr+13,tblptrl
  1277  00008E  C01F  FFF4         	movff	??_low_isr+12,prodh
  1278  000092  C01E  FFF3         	movff	??_low_isr+11,prodl
  1279  000096  C01D  FFDA         	movff	??_low_isr+10,fsr2h
  1280  00009A  C01C  FFD9         	movff	??_low_isr+9,fsr2l
  1281  00009E  C01B  FFE2         	movff	??_low_isr+8,fsr1h
  1282  0000A2  C01A  FFE1         	movff	??_low_isr+7,fsr1l
  1283  0000A6  C019  FFEA         	movff	??_low_isr+6,fsr0h
  1284  0000AA  C018  FFE9         	movff	??_low_isr+5,fsr0l
  1285  0000AE  C017  FFFB         	movff	??_low_isr+4,pclatu
  1286  0000B2  C016  FFFA         	movff	??_low_isr+3,pclath
  1287  0000B6  C015  FFE0         	movff	??_low_isr+2,bsr
  1288  0000BA  C014  FFE8         	movff	??_low_isr+1,wreg
  1289  0000BE  C013  FFD8         	movff	??_low_isr,status
  1290  0000C2  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1291  0000C4  0010               	retfie	
  1292  0000C6                     __end_of_low_isr:
  1293                           	opt stack 0
  1294                           pclatu	equ	0xFFB
  1295                           pclath	equ	0xFFA
  1296                           tblptru	equ	0xFF8
  1297                           tblptrh	equ	0xFF7
  1298                           tblptrl	equ	0xFF6
  1299                           tablat	equ	0xFF5
  1300                           prodh	equ	0xFF4
  1301                           prodl	equ	0xFF3
  1302                           postinc0	equ	0xFEE
  1303                           fsr0h	equ	0xFEA
  1304                           fsr0l	equ	0xFE9
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1h	equ	0xFE2
  1308                           fsr1l	equ	0xFE1
  1309                           bsr	equ	0xFE0
  1310                           fsr2h	equ	0xFDA
  1311                           fsr2l	equ	0xFD9
  1312                           status	equ	0xFD8
  1313                           
  1314 ;; *************** function _high_isr *****************
  1315 ;; Defined at:
  1316 ;;		line 27 in file "interrupts.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;		None
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		None
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1330 ;;      Params:         0       0       0       0       0       0       0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1332 ;;      Temps:         18       0       0       0       0       0       0       0       0
  1333 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1334 ;;Total ram usage:       18 bytes
  1335 ;; Hardware stack levels used:    1
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		Interrupt level 2
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           	psect	intcode
  1344  000008                     __pintcode:
  1345                           	opt stack 0
  1346  000008                     _high_isr:
  1347                           	opt stack 28
  1348                           
  1349                           ;incstack = 0
  1350  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1351  00000A  ED82  F001         	call	int_func,f	;refresh shadow registers
  1352                           pclatu	equ	0xFFB
  1353                           pclath	equ	0xFFA
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           prodh	equ	0xFF4
  1359                           prodl	equ	0xFF3
  1360                           postinc0	equ	0xFEE
  1361                           fsr0h	equ	0xFEA
  1362                           fsr0l	equ	0xFE9
  1363                           wreg	equ	0xFE8
  1364                           postdec1	equ	0xFE5
  1365                           fsr1h	equ	0xFE2
  1366                           fsr1l	equ	0xFE1
  1367                           bsr	equ	0xFE0
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           
  1372                           	psect	intcode_body
  1373  000304                     __pintcode_body:
  1374                           	opt stack 28
  1375  000304                     int_func:
  1376                           	opt stack 28
  1377  000304  0006               	pop		; remove dummy address from shadow register refresh
  1378  000306  CFFA F001          	movff	pclath,??_high_isr
  1379  00030A  CFFB F002          	movff	pclatu,??_high_isr+1
  1380  00030E  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1381  000312  CFEA F004          	movff	fsr0h,??_high_isr+3
  1382  000316  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1383  00031A  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1384  00031E  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1385  000322  CFDA F008          	movff	fsr2h,??_high_isr+7
  1386  000326  CFF3 F009          	movff	prodl,??_high_isr+8
  1387  00032A  CFF4 F00A          	movff	prodh,??_high_isr+9
  1388  00032E  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1389  000332  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1390  000336  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1391  00033A  CFF5 F00E          	movff	tablat,??_high_isr+13
  1392  00033E  C038  F00F         	movff	btemp,??_high_isr+14
  1393  000342  C039  F010         	movff	btemp+1,??_high_isr+15
  1394  000346  C03A  F011         	movff	btemp+2,??_high_isr+16
  1395  00034A  C03B  F012         	movff	btemp+3,??_high_isr+17
  1396  00034E  C012  F03B         	movff	??_high_isr+17,btemp+3
  1397  000352  C011  F03A         	movff	??_high_isr+16,btemp+2
  1398  000356  C010  F039         	movff	??_high_isr+15,btemp+1
  1399  00035A  C00F  F038         	movff	??_high_isr+14,btemp
  1400  00035E  C00E  FFF5         	movff	??_high_isr+13,tablat
  1401  000362  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1402  000366  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1403  00036A  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1404  00036E  C00A  FFF4         	movff	??_high_isr+9,prodh
  1405  000372  C009  FFF3         	movff	??_high_isr+8,prodl
  1406  000376  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1407  00037A  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1408  00037E  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1409  000382  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1410  000386  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1411  00038A  C003  FFE9         	movff	??_high_isr+2,fsr0l
  1412  00038E  C002  FFFB         	movff	??_high_isr+1,pclatu
  1413  000392  C001  FFFA         	movff	??_high_isr,pclath
  1414  000396  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1415  000398  0011               	retfie		f
  1416  00039A                     __end_of_high_isr:
  1417                           	opt stack 0
  1418  0000                     pclatu	equ	0xFFB
  1419                           pclath	equ	0xFFA
  1420                           tblptru	equ	0xFF8
  1421                           tblptrh	equ	0xFF7
  1422                           tblptrl	equ	0xFF6
  1423                           tablat	equ	0xFF5
  1424                           prodh	equ	0xFF4
  1425                           prodl	equ	0xFF3
  1426                           postinc0	equ	0xFEE
  1427                           fsr0h	equ	0xFEA
  1428                           fsr0l	equ	0xFE9
  1429                           wreg	equ	0xFE8
  1430                           postdec1	equ	0xFE5
  1431                           fsr1h	equ	0xFE2
  1432                           fsr1l	equ	0xFE1
  1433                           bsr	equ	0xFE0
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8
  1437                           pclatu	equ	0xFFB
  1438                           pclath	equ	0xFFA
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           prodh	equ	0xFF4
  1444                           prodl	equ	0xFF3
  1445                           postinc0	equ	0xFEE
  1446                           fsr0h	equ	0xFEA
  1447                           fsr0l	equ	0xFE9
  1448                           wreg	equ	0xFE8
  1449                           postdec1	equ	0xFE5
  1450                           fsr1h	equ	0xFE2
  1451                           fsr1l	equ	0xFE1
  1452                           bsr	equ	0xFE0
  1453                           fsr2h	equ	0xFDA
  1454                           fsr2l	equ	0xFD9
  1455                           status	equ	0xFD8
  1456                           
  1457                           	psect	rparam
  1458  0000                     pclatu	equ	0xFFB
  1459                           pclath	equ	0xFFA
  1460                           tblptru	equ	0xFF8
  1461                           tblptrh	equ	0xFF7
  1462                           tblptrl	equ	0xFF6
  1463                           tablat	equ	0xFF5
  1464                           prodh	equ	0xFF4
  1465                           prodl	equ	0xFF3
  1466                           postinc0	equ	0xFEE
  1467                           fsr0h	equ	0xFEA
  1468                           fsr0l	equ	0xFE9
  1469                           wreg	equ	0xFE8
  1470                           postdec1	equ	0xFE5
  1471                           fsr1h	equ	0xFE2
  1472                           fsr1l	equ	0xFE1
  1473                           bsr	equ	0xFE0
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478                           	psect	temp
  1479  000038                     btemp:
  1480                           	opt stack 0
  1481  000038                     	ds	1
  1482  0000                     int$flags	set	btemp
  1483  0000                     wtemp6	set	btemp+1
  1484                           pclatu	equ	0xFFB
  1485                           pclath	equ	0xFFA
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           prodh	equ	0xFF4
  1491                           prodl	equ	0xFF3
  1492                           postinc0	equ	0xFEE
  1493                           fsr0h	equ	0xFEA
  1494                           fsr0l	equ	0xFE9
  1495                           wreg	equ	0xFE8
  1496                           postdec1	equ	0xFE5
  1497                           fsr1h	equ	0xFE2
  1498                           fsr1l	equ	0xFE1
  1499                           bsr	equ	0xFE0
  1500                           fsr2h	equ	0xFDA
  1501                           fsr2l	equ	0xFD9
  1502                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         6
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     55      55
    BANK0           160     10      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___aldiv
    ___aldiv->___wmul

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___aldiv

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    1343
                                             53 COMRAM     2     2      0
                                              6 BANK0      4     4      0
                _ConfigureOscillator
                            _InitApp
                            ___aldiv
                            ___lwdiv
                             ___wmul
                        _delay_100us
 ---------------------------------------------------------------------------------
 (1) _delay_100us                                          4     2      2     198
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     311
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             39 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             14     6      8     452
                                             45 COMRAM     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _low_isr                                             21    21      0       0
                                             18 COMRAM    21    21      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                            18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___aldiv
     ___wmul (ARG)
   ___lwdiv
   ___wmul
   _delay_100us

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      18       5       15.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     37      37       1       58.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      20        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Jun 17 11:37:28 2019

                          l51 01A8                            l43 0150                            l60 0216  
                          l52 01AC                            l44 0178                            l61 021A  
                          l53 01EE                            l46 01B4                            l55 01DE  
                          l47 0196                            l67 0460                            l68 0454  
                          bsr 000FE0           ___wmul@multiplicand 002A                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                           l140 0254                           l141 026C  
                         l143 029A                           l144 028E                           l147 02CE  
                         l148 02DC                           l149 02F2                           l492 03D8  
                         l493 03E2                           l488 03B8                           l489 03B0  
                         l954 0150                           l990 01E4                  __CFG_CPB$OFF 000000  
                         u300 03BC                           u260 029E                           u350 018E  
                __CFG_CPD$OFF 000000                           u437 0456                  __CFG_BOR$OFF 000000  
                         _per 0076                           wreg 000FE8                  __CFG_FOSC$HS 000000  
                __CFG_LVP$OFF 000000                  __CFG_WDT$OFF 000000                          l1008 0224  
                        _LATA 000F89                          _main 00CA                          _duty 0074  
                        _t_on 0072                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 0038                          prodh 000FF4  
                        prodl 000FF3                          start 00C6                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               __end_of_InitApp 0480  
               __CFG_PLLDIV$1 000000                __CFG_CCP2MX$ON 000000               __end_of___aldiv 0304  
                       ?_main 0001               __end_of___lwdiv 03EC                         _PORTA 000F80  
               __CFG_USBDIV$1 000000           _ConfigureOscillator 0484                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _t_off 0070          __size_of_delay_100us 0024  
             __end_of_low_isr 00C6                         pclath 000FFA                         tablat 000FF5  
                       status 000FD8                         wtemp6 0039          ?_ConfigureOscillator 0001  
             __initialization 03EC                  __end_of_main 0236                        ??_main 0036  
               __activetblptr 000000                        _ADCON1 000FC1                     ??_InitApp 0028  
       ??_ConfigureOscillator 0028                __CFG_XINST$OFF 000000              __end_of_high_isr 039A  
                   ??___aldiv 0036                        ___wmul 0424                     ??___lwdiv 002C  
                   ??_low_isr 0013                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                    __accesstop 0060       __end_of__initialization 041A  
             __CFG_PBADEN$OFF 000000                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                __pidataBANK0 0480                    __pbssBANK0 006A                       ?___wmul 0028  
               delay_100us@us 0028                     ?_high_isr 0001               __CFG_VREGEN$OFF 000000  
                     _InitApp 046E                    _count_duty 006A                       __Hparam 0000  
                     __Lparam 0000                       ___aldiv 0236               __size_of___wmul 0026  
                     ___lwdiv 039A               __CFG_STVREN$OFF 000000                       __pcinit 03EC  
                     __ramtop 0800                       __ptext0 00CA                       __ptext1 044A  
                     __ptext2 0424                       __ptext3 039A                       __ptext4 0236  
                     __ptext5 046E                       __ptext6 0484              ___aldiv@dividend 002E  
               ??_delay_100us 002A                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 0304          end_of_initialization 041A                       int_func 0304  
            ___aldiv@quotient 0062                       postdec1 000FE5                       postinc0 000FEE  
                   _PORTAbits 000F80                     _TRISAbits 000F92   __end_of_ConfigureOscillator 0486  
         __end_of_delay_100us 046E                __end_of___wmul 044A           start_initialization 03EC  
                    ??___wmul 002C                   __pdataBANK0 0074              __CFG_LPT1OSC$OFF 000000  
               __pcstackBANK0 0060                   _delay_100us 044A             __size_of_high_isr 0392  
                    ?_InitApp 0001                     __pnvBANK0 0070              ___lwdiv@dividend 0028  
                   __pintcode 0008                  delay_100us@i 002A                      ?___aldiv 002E  
                    ?___lwdiv 0028                   __pintcodelo 0018                      ?_low_isr 0001  
            ___lwdiv@quotient 002C               ___aldiv@divisor 0032               ___aldiv@counter 0060  
              ___wmul@product 002C                      _LATAbits 000F89              __CFG_WDTPS$32768 000000  
             main@max_cont_up 0066             ___wmul@multiplier 0028                     copy_data0 0400  
            __size_of_InitApp 0012                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___aldiv 00CE              __size_of___lwdiv 0052                      _dec_duty 006E  
             ___lwdiv@divisor 002A               ___lwdiv@counter 002E              __size_of_low_isr 00AE  
                    _high_isr 0008                      _inc_duty 006F                      _count_up 006C  
               __size_of_main 016C  __size_of_ConfigureOscillator 0002                      int$flags 0038  
       __CFG_CPUDIV$OSC1_PLL2 000000                  ?_delay_100us 0028                      intlevel1 0000  
                    intlevel2 0000                  ___aldiv@sign 0061            main@max_count_duty 0068  
